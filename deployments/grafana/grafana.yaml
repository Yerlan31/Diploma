apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  namespace: kube-system
  labels:
    app: grafana
    component: core
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        component: core
    spec:
      containers:
      - image: grafana/grafana:9.2.10
        name: grafana-core
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
            #      readinessProbe:
            # httpGet:
            # path: /login
            # port: 3000
        volumeMounts:
        - name: dashboard-315
          mountPath: /var/lib/grafana/dashboards
        - name: dashboard-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: datasource-config
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: dashboard-config
        configMap: 
          name: dashboard-config
      - name: datasource-config
        configMap: 
          name: datasource-config
      - name: dashboard-315
        configMap: 
          name: dashboard-315
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: kube-system
  labels:
    app: grafana
    component: core
spec:
  type: NodePort
  ports:
    - port: 3000
      protocol: TCP
      nodePort: 30004
  selector:
    app: grafana
    component: core
